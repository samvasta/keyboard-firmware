#pragma once

#include <Adafruit_TinyUSB.h>
#include "common.h"

#define KEY_A HID_KEY_A
#define KEY_B HID_KEY_B
#define KEY_C HID_KEY_C
#define KEY_D HID_KEY_D
#define KEY_E HID_KEY_E
#define KEY_F HID_KEY_F
#define KEY_G HID_KEY_G
#define KEY_H HID_KEY_H
#define KEY_I HID_KEY_I
#define KEY_J HID_KEY_J
#define KEY_K HID_KEY_K
#define KEY_L HID_KEY_L
#define KEY_M HID_KEY_M
#define KEY_N HID_KEY_N
#define KEY_O HID_KEY_O
#define KEY_P HID_KEY_P
#define KEY_Q HID_KEY_Q
#define KEY_R HID_KEY_R
#define KEY_S HID_KEY_S
#define KEY_T HID_KEY_T
#define KEY_U HID_KEY_U
#define KEY_V HID_KEY_V
#define KEY_W HID_KEY_W
#define KEY_X HID_KEY_X
#define KEY_Y HID_KEY_Y
#define KEY_Z HID_KEY_Z
#define KEY_1 HID_KEY_1
#define KEY_2 HID_KEY_2
#define KEY_3 HID_KEY_3
#define KEY_4 HID_KEY_4
#define KEY_5 HID_KEY_5
#define KEY_6 HID_KEY_6
#define KEY_7 HID_KEY_7
#define KEY_8 HID_KEY_8
#define KEY_9 HID_KEY_9
#define KEY_0 HID_KEY_0
#define KEY_ENT HID_KEY_ENTER
#define KEY_ESC HID_KEY_ESCAPE
#define KEY_BSP HID_KEY_BACKSPACE
#define KEY_TAB HID_KEY_TAB
#define KEY_SPC HID_KEY_SPACE
#define KEY_MIN HID_KEY_MINUS
#define KEY_EQ HID_KEY_EQUAL
#define KEY_BRK_L HID_KEY_BRACKET_LEFT
#define KEY_BRK_R HID_KEY_BRACKET_RIGHT
#define KEY_BSLASH HID_KEY_BACKSLASH
#define KEY_SEMI HID_KEY_SEMICOLON
#define KEY_APOS HID_KEY_APOSTROPHE
#define KEY_GRV HID_KEY_GRAVE
#define KEY_COMMA HID_KEY_COMMA
#define KEY_DOT HID_KEY_PERIOD
#define KEY_SLSH HID_KEY_SLASH
#define KEY_CAPS_LOCK HID_KEY_CAPS_LOCK
#define KEY_F1 HID_KEY_F1
#define KEY_F2 HID_KEY_F2
#define KEY_F3 HID_KEY_F3
#define KEY_F4 HID_KEY_F4
#define KEY_F5 HID_KEY_F5
#define KEY_F6 HID_KEY_F6
#define KEY_F7 HID_KEY_F7
#define KEY_F8 HID_KEY_F8
#define KEY_F9 HID_KEY_F9
#define KEY_F10 HID_KEY_F10
#define KEY_F11 HID_KEY_F11
#define KEY_F12 HID_KEY_F12
#define KEY_F13 HID_KEY_F13
#define KEY_F14 HID_KEY_F14
#define KEY_F15 HID_KEY_F15
#define KEY_F16 HID_KEY_F16
#define KEY_F17 HID_KEY_F17
#define KEY_F18 HID_KEY_F18
#define KEY_F19 HID_KEY_F19
#define KEY_F20 HID_KEY_F20
#define KEY_F21 HID_KEY_F21
#define KEY_F22 HID_KEY_F22
#define KEY_F23 HID_KEY_F23
#define KEY_F24 HID_KEY_F24

#define KEY_PRSCN HID_KEY_PRINT_SCREEN
#define KEY_SCROLL_LOCK HID_KEY_SCROLL_LOCK
#define KEY_PAUSE HID_KEY_PAUSE
#define KEY_INS HID_KEY_INSERT
#define KEY_HOME HID_KEY_HOME
#define KEY_PGUP HID_KEY_PAGE_UP
#define KEY_DEL HID_KEY_DELETE
#define KEY_END HID_KEY_END
#define KEY_PGDN HID_KEY_PAGE_DOWN
#define KEY_RIGHT HID_KEY_ARROW_RIGHT
#define KEY_LEFT HID_KEY_ARROW_LEFT
#define KEY_DOWN HID_KEY_ARROW_DOWN
#define KEY_UP HID_KEY_ARROW_UP

#define KEY_LCTL HID_KEY_CONTROL_LEFT
#define KEY_LSFT HID_KEY_SHIFT_LEFT
#define KEY_LALT HID_KEY_ALT_LEFT
#define KEY_LGUI HID_KEY_GUI_LEFT
#define KEY_RCTL HID_KEY_CONTROL_RIGHT
#define KEY_RSFT HID_KEY_SHIFT_RIGHT
#define KEY_RALT HID_KEY_ALT_RIGHT
#define KEY_RGUI HID_KEY_GUI_RIGHT

#define KEY_VOLD HID_KEY_VOLUME_DOWN
#define KEY_VOLU HID_KEY_VOLUME_UP
// #define KEY_MPLY	HID_KEY_MEDIA_PLAY_PAUSE
// #define KEY_MPRV	HID_KEY_MEDIA_PREV_TRACK
// #define KEY_MNXT	HID_KEY_MEDIA_NEXT_TRACK

#define KEY_P_MINUS HID_KEY_KEYPAD_SUBTRACT
#define KEY_P_SLASH HID_KEY_KEYPAD_DIVIDE
#define KEY_P_PLUS HID_KEY_KEYPAD_ADD
#define KEY_P_DOT HID_KEY_KEYPAD_DECIMAL
#define KEY_P_MULT HID_KEY_KEYPAD_MULTIPLY
#define KEY_P0 HID_KEY_KEYPAD_0
#define KEY_P1 HID_KEY_KEYPAD_1
#define KEY_P2 HID_KEY_KEYPAD_2
#define KEY_P3 HID_KEY_KEYPAD_3
#define KEY_P4 HID_KEY_KEYPAD_4
#define KEY_P5 HID_KEY_KEYPAD_5
#define KEY_P6 HID_KEY_KEYPAD_6
#define KEY_P7 HID_KEY_KEYPAD_7
#define KEY_P8 HID_KEY_KEYPAD_8
#define KEY_P9 HID_KEY_KEYPAD_9
#define KEY_P_LEFT_PARENTHESIS HID_KEY_KEYPAD_LEFT_PARENTHESIS
#define KEY_P_RIGHT_PARENTHESIS HID_KEY_KEYPAD_RIGHT_PARENTHESIS
#define KEY_P_LEFT_BRACE HID_KEY_KEYPAD_LEFT_BRACE
#define KEY_P_RIGHT_BRACE HID_KEY_KEYPAD_RIGHT_BRACE
#define KEY_P_TAB HID_KEY_KEYPAD_TAB
#define KEY_P_BACKSPACE HID_KEY_KEYPAD_BACKSPACE
#define KEY_P_A HID_KEY_KEYPAD_A
#define KEY_P_B HID_KEY_KEYPAD_B
#define KEY_P_C HID_KEY_KEYPAD_C
#define KEY_P_D HID_KEY_KEYPAD_D
#define KEY_P_E HID_KEY_KEYPAD_E
#define KEY_P_F HID_KEY_KEYPAD_F
#define KEY_XOR HID_KEY_KEYPAD_XOR
#define KEY_CARET HID_KEY_KEYPAD_CARET
#define KEY_PERCENT HID_KEY_KEYPAD_PERCENT
#define KEY_LT HID_KEY_KEYPAD_LESS_THAN
#define KEY_GT HID_KEY_KEYPAD_GREATER_THAN
#define KEY_AMPERSAND HID_KEY_KEYPAD_AMPERSAND
#define KEY_DOUBLE_AMPERSAND HID_KEY_KEYPAD_DOUBLE_AMPERSAND
#define KEY_VERTICAL_BAR HID_KEY_KEYPAD_VERTICAL_BAR
#define KEY_DOUBLE_VERTICAL_BAR HID_KEY_KEYPAD_DOUBLE_VERTICAL_BAR
#define KEY_COLON HID_KEY_KEYPAD_COLON
#define KEY_HASH HID_KEY_KEYPAD_HASH
#define KEY_P_SPACE HID_KEY_KEYPAD_SPACE
#define KEY_AT HID_KEY_KEYPAD_AT
#define KEY_EXCL HID_KEY_KEYPAD_EXCLAMATION

// Consumer Control (Media, Volume, Brightness etc ...)
#define KEY_CODE_CONSUMER_CONTROL_START 0xE000

// Brightness
#define KEY_BR_U HID_USAGE_CONSUMER_BRIGHTNESS_INCREMENT | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_BR_D HID_USAGE_CONSUMER_BRIGHTNESS_DECREMENT | KEY_CODE_CONSUMER_CONTROL_START

// Media
#define KEY_MEDIA_PLAY_PAUSE HID_USAGE_CONSUMER_PLAY_PAUSE | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_MEDIA_NEXT_TRACK HID_USAGE_CONSUMER_SCAN_NEXT | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_MEDIA_PREV_TRACK HID_USAGE_CONSUMER_SCAN_PREVIOUS | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_MEDIA_STOP HID_USAGE_CONSUMER_STOP | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_MEDIA_MUTE HID_USAGE_CONSUMER_MUTE | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_MEDIA_VOLUME_INCREMENT HID_USAGE_CONSUMER_VOLUME_INCREMENT | KEY_CODE_CONSUMER_CONTROL_START
#define KEY_MEDIA_VOLUME_DECREMENT HID_USAGE_CONSUMER_VOLUME_DECREMENT | KEY_CODE_CONSUMER_CONTROL_START

static bool is_consumer_control_key(keycode_t kc)
{
  return (kc & 0xF000) == KEY_CODE_CONSUMER_CONTROL_START;
}
static uint16_t get_consumer_control_keycode(keycode_t kc)
{
  return kc & 0x0FFF;
}

#define KEY_CODE_LAYER_RANGE_START 0x6000

#define KEY_CODE_ALPHA_RANGE_START 0x6800

enum alpha_keycodes
{
  ALPHA_QWERTY = (uint8_t)KEY_CODE_ALPHA_RANGE_START,
  ALPHA_QGMLWY,
  ALPHA_NORD_MIRROR,

  _num_alpha_layers,
};

#define NUM_ALPHA_LAYERS _num_alpha_layers & 0xff

#define CUSTOM_KEY_CODE_RANGE_START 0x7000

static bool is_hid_code(keycode_t kc)
{
  return kc < KEY_CODE_LAYER_RANGE_START;
}

enum custom_keycodes
{
  KEY_NO = CUSTOM_KEY_CODE_RANGE_START, // Opaque, No-op
  KEY_TRANS,

  KEY_COPY,
  KEY_PASTE,
  KEY_CUT,
  KEY_UNDO,
  KEY_REDO,
  KEY_SELECT_ALL,

  KEY_OSX,       // Set os mode to OSX
  KEY_LINUX,     // Set os mode to Linux
  KEY_OS_TOGGLE, // Toggle between os modes
};

#define L(kc) ((kc & 0xFF) | KEY_CODE_LAYER_RANGE_START)

#define S(kc) ((kc & 0x00ff) | KEY_CODE_SHIFTED_CHAR)

#define ______ KEY_TRANS

#define ___ KEY_TRANS